print("=== DIAGNOSTIC COLONNES ===")
print("Colonnes dans df_ti_dept_sans_idf :")
print(list(df_ti_dept_sans_idf.columns))
print("\nColonnes dans df_dept :")
print(list(df_dept.columns))

# Identifier les colonnes communes (sauf les clés de jointure)
colonnes_communes = set(df_ti_dept_sans_idf.columns).intersection(set(df_dept.columns))
colonnes_communes.discard('DEPT')  # Garder la clé de jointure
colonnes_communes.discard('num_dpt')  # Garder la clé de jointure

print(f"Colonnes communes qui posent problème : {colonnes_communes}")

# Supprimer les colonnes dupliquées d'un des DataFrames
if colonnes_communes:
    print(f"Suppression des colonnes dupliquées : {list(colonnes_communes)}")
    df_dept = df_dept.drop(columns=list(colonnes_communes))

# Merge sans problème
df_ti_dept_sans_idf = pd.merge(df_ti_dept_sans_idf, df_dept, left_on='DEPT', right_on='num_dpt', how='inner')
print(f"Lignes finales : {len(df_ti_dept_sans_idf)}")
