####################### Graphique de province ############################

df_ti_dept_work = df_ti_dept.copy()  

df_dept = pd.read_excel(r"N:\uflumth\indicateur_marche\V2\données indice de prix\table_rapport (2025)\departements francais.xlsx", header=3)
df_dept = df_dept.rename(columns={'Numéro': 'num_dpt'})
df_dept = df_dept.rename(columns={'Département': 'nom_dpt'})
df_dept = df_dept.rename(columns={'2025 (p)': 'population'})

#On exclu l'IDF
liste_depts_idf = ['92', '93', '94', '95', '91', '78', '77','75']
df_ti_dept['DEPT'] = df_ti_dept['DEPT'].astype(str)
df_ti_province = df_ti_dept[~df_ti_dept["DEPT"].isin(liste_depts_idf)].copy()


df_ti_dept_work['DEPT'] = df_ti_dept_work['DEPT'].astype(str)
df_dept['num_dpt'] = df_dept['num_dpt'].astype(str)
df_dept['num_dpt'] = df_dept['num_dpt'].apply(lambda x: '0' + x if len(x) == 1 else x)



df_ti_dept_work = pd.merge(df_ti_dept_work, df_dept, left_on='DEPT', right_on='num_dpt', how='inner')

df_ti_dept_work['Year'] = df_ti_dept_work['PERIODE'].apply(lambda x: current_year - int(x.split('-')[1]))
df_ti_dept_work['TAUX_INFL'] = df_ti_dept_work['TAUX_INFL'].astype(float)
df_ti_dept_work['population'] = df_ti_dept_work['population'].astype(float)
df_ti_dept_work['TAUX_INFL_POP'] = df_ti_dept_work.apply(lambda row: row['TAUX_INFL'] * row['population'], axis=1)

df_ti_dept_grouped = df_ti_dept_work.groupby('Year').agg({'TAUX_INFL_POP': 'sum', 'population': 'sum'}).reset_index()
df_ti_dept_grouped['TAUX_INFL'] = df_ti_dept_grouped['TAUX_INFL_POP'] / df_ti_dept_grouped['population']
df_ti_dept_grouped = df_ti_dept_grouped.drop(columns=['TAUX_INFL_POP'])

new_data = pd.DataFrame([{'Year': current_year, 'TAUX_INFL': 0}])
df_ti_dept_grouped = pd.concat([df_ti_dept_grouped, new_data], ignore_index=True)
df_ti_dept_grouped['Year'] = pd.to_datetime(df_ti_dept_grouped['Year'].astype(str), format='%Y')
df_ti_dept_grouped['TAUX_INFL_TRANSFO'] = (100/(1+df_ti_dept_grouped['TAUX_INFL']))

taux_infl_2015_2014 = df_ti_dept_grouped[df_ti_dept_grouped['Year'].dt.year.isin([2015, 2014])]['TAUX_INFL_TRANSFO'].mean()
df_ti_dept_grouped['TAUX_INFL_BASE_2015'] = (df_ti_dept_grouped['TAUX_INFL_TRANSFO']/taux_infl_2015_2014)*100

# Graphique
plt.figure(figsize=(10, 5))
plt.plot(df_ti_dept_grouped['Year'], df_ti_dept_grouped['TAUX_INFL_BASE_2015'])
plt.xlabel('Year')
plt.ylabel('(1+TAUX_INFL)*100')
plt.title('Graphique de (1+TAUX_INFL)*100 en fonction de l\'année')
plt.grid(True)
plt.show()

df= pd.read_csv(rf'N:\uflumth\indicateur_marche\V2\données indice de prix\table_rapport (2025)\valeurs_trimestrielles_PROVINCE_APP.csv', sep = ';')
df=df[4:]
df = df.rename(columns={df.columns[1]: 'taux_infl'})
df['taux_infl'] = df['taux_infl'].astype(float)
df['Year'] = df['Libellé'].apply(lambda x: int(x.split('-')[0]))
df['Quarter'] = df['Libellé'].apply(lambda x: int(x.split('T')[-1]))


df['Month'] = df['Quarter'] * 3

df['Période'] = pd.to_datetime(df[['Year', 'Month']].assign(DAY=1))

df['Moyenne Glissante'] = df['taux_infl'].rolling(window=4, min_periods=1).mean()


plt.figure(figsize=(10, 6))
plt.plot(df['Période'], df['Moyenne Glissante'], label="Moyenne Glissante par trimestre de l'INSEE")
plt.plot(df_ti_dept_grouped['Year'], df_ti_dept_grouped['TAUX_INFL_BASE_2015'], label='Taux Inflation par année de CL')

plt.xlabel('Année')
plt.ylabel('Valeur')
plt.legend()
